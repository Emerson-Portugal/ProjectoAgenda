<%- include('partials/head') %>

<link rel="stylesheet" type="text/css" href="/styleContenido.css">

<div class="imagenAgendaFondo"></div>

<h2>Crea tu Actividad</h2>

<form id="crearArchivoForm" method="POST">
    <!-- Agregamos un campo oculto para el nombre de la lista -->
    <input type="hidden" id="newLista" name="nombreLista" value="<%= nombreLista  %>" />
    <input type="text" id="newArchivo" name="nombreArchivo" placeholder="Nombre del archivo" />
    <!-- Otros campos del formulario si es necesario -->
    <button type="submit">Crear Archivo</button>
</form>

    <h1>Carpeta <%= nombreLista %></h>
    <!-- Mostramos el nombre de la lista aquí -->
    <div class="panelConScroll">
        <ul>
            <% archivos.forEach(archivo=> { %>

                <li id="archivo">
                        <form class="editarFormArchivo" method="POST">
                            <%= archivo %>
                            <br>
                            <input type="hidden" name="nombreLista" value="<%= nombreLista %>" />
                            <input type="hidden" class="nombreArchivoAnterior" value="<%= archivo %>" />
                            <input type="text" class="nuevoNombreArchivo" placeholder="Nuevo nombre" />
                            <div class="botonesContenedor">
                                <button type="submit">Editar</button>
                                <button class="eliminarBtn" data-ruta="<%= nombreLista %>" data-nombre="<%= archivo %>">Eliminar</button>
                            </div>
                        </form>

                </li>
                <% }); %>
        </ul>
    </div>

    <script>
        document
            .getElementById("crearArchivoForm")
            .addEventListener("submit", function (event) {
                event.preventDefault(); // Evitar el comportamiento por defecto del formulario

                // Enviar solicitud POST para crear un nuevo archivo
                fetch(
                    "/crearArchivo/" +
                    encodeURIComponent(document.getElementById("newLista").value),
                    {
                        method: "POST",
                        body: JSON.stringify({
                            nombreArchivo: document.getElementById("newArchivo").value,
                        }), // Solo un objeto JSON
                        headers: {
                            "Content-Type": "application/json",
                        },
                    }
                )
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.redirect) {
                            window.location.href = data.redirect;
                        } else {
                            console.error("Error al crear el archivo:", data.error);
                        }
                    })
                    .catch((error) => console.error("Error al crear el archivo:", error));
            });
    </script>

    <script>
        // Escucha el clic en los botones de eliminar y envía la solicitud DELETE
        document.querySelectorAll(".eliminarBtn").forEach((btn) => {
            btn.addEventListener("click", function () {
                const rutaCompleta = this.dataset.ruta;
                const nombreArchivo = this.dataset.nombre;

                fetch(`/eliminarArchivo/${rutaCompleta}`, {
                    // Pasar el nombre del archivo como parámetro de consulta
                    method: "DELETE",
                    body: JSON.stringify({ nombreArchivo }),
                    headers: {
                        "Content-Type": "application/json",
                    },
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.redirect) {
                            window.location.href = data.redirect;
                        } else {
                            console.error("Error al eliminar el archivo:", data.error);
                        }
                    })
                    .catch((error) =>
                        console.error("Error al eliminar el archivo:", error)
                    );
            });
        });
    </script>

    <script>


        document.querySelectorAll(".editarFormArchivo").forEach((form) => {
            form.addEventListener("submit", function (event) {
                event.preventDefault();

                // Encuentra los valores dentro del formulario actual
                const nombreLista = this.querySelector('input[name="nombreLista"]').value;
                const nombreArchivoAnterior = this.querySelector('.nombreArchivoAnterior').value;
                const nuevoNombreArchivo = this.querySelector('.nuevoNombreArchivo').value;

                fetch(
                    "/editarArchivo/" + encodeURIComponent(nombreLista),
                    {
                        method: "POST",
                        body: JSON.stringify({
                            nombreArchivoAnterior: nombreArchivoAnterior,
                            nuevoNombreArchivo: nuevoNombreArchivo,
                        }),
                        headers: {
                            "Content-Type": "application/json",
                        },
                    }
                )
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.redirect) {
                            window.location.href = data.redirect;
                        } else {
                            console.error("Error al editar la lista:", data.error);
                        }
                    })
                    .catch((error) => console.error("Error al editar la lista:", error));
            });
        });

    </script>

    <%- include('partials/foot') %>